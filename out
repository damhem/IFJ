.IFJcode19
# -------------------start------------------
DEFVAR GF@tmp
DEFVAR GF@tmp1
DEFVAR GF@tmp2
JUMP $$start
# -------------------len()------------------
LABEL $len
PUSHFRAME
STRLEN GF@tmp LF@s
RETURN
# -------------------ord()------------------
LABEL $ord
PUSHFRAME
DEFVAR LF@slen
STRLEN LF@slen LF@s
SUB LF@i LF@i int@1
STRI2INT GF@tmp LF@s LF@i
RETURN
# -------------------chr()--------------------
LABEL $chr
PUSHFRAME
INT2CHAR GF@tmp LF@i
RETURN
# -------------------print()--------------------
LABEL $print
POPS GF@tmp
TYPE GF@tmp1 GF@tmp
JUMPIFEQ $fornumber GF@tmp1 string@int
JUMPIFEQ $fornumber GF@tmp1 string@float
MOVE GF@tmp1 string@%endwhile
JUMPIFEQ $endwhile GF@tmp GF@tmp1
JUMPIFNEQ $continue_write GF@tmp2 int@1
WRITE string@\032
LABEL $continue_write
WRITE GF@tmp
MOVE GF@tmp2 int@1
JUMP $print
LABEL $fornumber
JUMPIFNEQ $continue_writee GF@tmp2 int@1
WRITE string@\032
LABEL $continue_writee
WRITE GF@tmp
MOVE GF@tmp2 int@1
JUMP $print
LABEL $endwhile
WRITE string@\010
RETURN
# ------------------------------------------
# konec generovani vestavench funkci
# ------------------------------------------
LABEL $$start
MOVE GF@tmp2 int@2
PUSHS string@%endwhile
PUSHS string@Zadejtecisloprovypocetfaktorialu:
CALL $print
DEFVAR GF@a
PUSHS int@6
POPS GF@a
PUSHS GF@a
PUSHS int@0
LTS
POPS GF@tmp
TYPE GF@tmp1 GF@tmp
JUMPIFEQ $compare_int%0 GF@tmp1 string@int
JUMPIFEQ $compare_double%0 GF@tmp1 string@float
JUMPIFEQ $compare_bool%0 GF@tmp1 string@bool
JUMP $continue%0
LABEL $compare_int%0
JUMPIFEQ $else%0 GF@tmp int@0
JUMP $continue%0
LABEL $compare_double%0
JUMPIFEQ $else%0 GF@tmp float@0x0p+0
JUMP $continue%0
LABEL $compare_bool%0
JUMPIFEQ $else%0 GF@tmp bool@false
LABEL $continue%0
MOVE GF@tmp2 int@2
PUSHS string@%endwhile
PUSHS string@Faktorialnelzespocitat
CALL $print
JUMP $end%0
LABEL $else%0
DEFVAR GF@vysl
PUSHS int@1
POPS GF@vysl
LABEL $end%0
LABEL $start_while%1
PUSHS GF@a
PUSHS int@0
GTS
POPS GF@tmp
TYPE GF@tmp1 GF@tmp
JUMPIFEQ $compare_int_w%1 GF@tmp1 string@int
JUMPIFEQ $compare_double_w%1 GF@tmp1 string@float
JUMPIFEQ $compare_bool_w%1 GF@tmp1 string@bool
JUMP $continue_w%
LABEL $compare_int_w%1
JUMPIFEQ $end_w%1 GF@tmp int@0
JUMP $continue_w%
LABEL $compare_double_w%1
JUMPIFEQ $end_w%1 GF@tmp float@0x0p+0
JUMP $continue_w%
LABEL $compare_bool_w%1
JUMPIFEQ $end_w%1 GF@tmp bool@false
LABEL $continue_w%
PUSHS GF@vysl
PUSHS GF@a
MULS
POPS GF@vysl
PUSHS GF@a
PUSHS int@1
SUBS
POPS GF@a
JUMP $start_while%1
LABEL $end_w%1
MOVE GF@tmp2 int@2
PUSHS string@%endwhile
PUSHS string@

PUSHS GF@vysl
PUSHS string@Vysledekje:
CALL $print
