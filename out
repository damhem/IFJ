.IFJcode19
# -------------------start------------------
DEFVAR GF@tmp
DEFVAR GF@tmp1
DEFVAR GF@tmp2
JUMP $$start
# -------------------len()------------------
LABEL $len
PUSHFRAME
STRLEN GF@tmp LF@s
RETURN
# -------------------ord()------------------
LABEL $ord
PUSHFRAME
DEFVAR LF@slen
STRLEN LF@slen LF@s
SUB LF@i LF@i int@1
STRI2INT GF@tmp LF@s LF@i
RETURN
# -------------------chr()--------------------
LABEL $chr
PUSHFRAME
INT2CHAR GF@tmp LF@i
RETURN
# -------------------inputs()--------------------
LABEL $inputs
PUSHFRAME
READ GF@tmp string
PUSHS GF@tmp
RETURN
# -------------------inputi()--------------------
LABEL $inputi
PUSHFRAME
READ GF@tmp int
PUSHS GF@tmp
RETURN
# -------------------inputf()--------------------
LABEL $inputf
PUSHFRAME
READ GF@tmp float
PUSHS GF@tmp
RETURN
# -------------------print()--------------------
LABEL $print
POPS GF@tmp
TYPE GF@tmp1 GF@tmp
JUMPIFEQ $fornumber GF@tmp1 string@int
JUMPIFEQ $fornumber GF@tmp1 string@float
MOVE GF@tmp1 string@%endwhile
JUMPIFEQ $endwhile GF@tmp GF@tmp1
JUMPIFNEQ $continue_write GF@tmp2 int@1
WRITE string@\032
LABEL $continue_write
WRITE GF@tmp
MOVE GF@tmp2 int@1
JUMP $print
LABEL $fornumber
JUMPIFNEQ $continue_writee GF@tmp2 int@1
WRITE string@\032
LABEL $continue_writee
WRITE GF@tmp
MOVE GF@tmp2 int@1
JUMP $print
LABEL $endwhile
WRITE string@\010
RETURN
# ------------------------------------------
# konec generovani vestavench funkci
# ------------------------------------------
LABEL $$start
JUMP $factorial%
LABEL $factorial
PUSHFRAME
DEFVAR LF@n
MOVE LF@n LF@%0
PUSHS LF@n
PUSHS int@2
LTS
POPS GF@tmp
TYPE GF@tmp1 GF@tmp
JUMPIFEQ $compare_int%0 GF@tmp1 string@int
JUMPIFEQ $compare_double%0 GF@tmp1 string@float
JUMPIFEQ $compare_bool%0 GF@tmp1 string@bool
JUMP $continue%0
LABEL $compare_int%0
JUMPIFEQ $else%0 GF@tmp int@0
JUMP $continue%0
LABEL $compare_double%0
JUMPIFEQ $else%0 GF@tmp float@0x0p+0
JUMP $continue%0
LABEL $compare_bool%0
JUMPIFEQ $else%0 GF@tmp bool@false
LABEL $continue%0
DEFVAR LF@result
PUSHS int@1
POPS LF@result
JUMP $end%0
LABEL $else%0
DEFVAR LF@decremented_n
PUSHS LF@n
PUSHS int@1
SUBS
POPS LF@decremented_n
DEFVAR LF@temp_result
CREATEFRAME
DEFVAR TF@%0
MOVE TF@%0 LF@decremented_n
CALL $factorial
POPFRAME
POPS LF@temp_result
TYPE GF@tmp2 LF@result
JUMPIFNEQ $ending%0 string@ float@0x0p+0
DEFVAR LF@result
LABEL $ending%0
PUSHS LF@n
PUSHS LF@temp_result
MULS
POPS LF@result
LABEL $end%0
PUSHS LF@result
RETURN
LABEL $factorial%
MOVE GF@tmp2 int@2
PUSHS string@%endwhile
PUSHS string@Zadejte\032cislo\032pro\032vypocet\032faktorialu:\032
CALL $print
DEFVAR GF@a
CREATEFRAME
CALL $inputi
POPFRAME
POPS GF@a
PUSHS GF@a
PUSHS int@0
LTS
POPS GF@tmp
TYPE GF@tmp1 GF@tmp
JUMPIFEQ $compare_int%1 GF@tmp1 string@int
JUMPIFEQ $compare_double%1 GF@tmp1 string@float
JUMPIFEQ $compare_bool%1 GF@tmp1 string@bool
JUMP $continue%1
LABEL $compare_int%1
JUMPIFEQ $else%1 GF@tmp int@0
JUMP $continue%1
LABEL $compare_double%1
JUMPIFEQ $else%1 GF@tmp float@0x0p+0
JUMP $continue%1
LABEL $compare_bool%1
JUMPIFEQ $else%1 GF@tmp bool@false
LABEL $continue%1
MOVE GF@tmp2 int@2
PUSHS string@%endwhile
PUSHS string@Faktorial\032nelze\032spocitat
CALL $print
JUMP $end%1
LABEL $else%1
DEFVAR GF@vysl
CREATEFRAME
DEFVAR TF@%0
MOVE TF@%0 GF@a
CALL $factorial
POPFRAME
POPS GF@vysl
MOVE GF@tmp2 int@2
PUSHS string@%endwhile
PUSHS GF@vysl
PUSHS string@Vysledek\032je:
CALL $print
LABEL $end%1
